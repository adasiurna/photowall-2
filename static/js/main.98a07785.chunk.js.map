{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Photo.js","Components/PhotoWall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","state","postsList","action","type","slice","index","post","comments","postId","comment","Photo","props","className","to","id","src","imageLink","alt","description","onClick","startRemovingPost","history","push","length","PhotoWall","sort","x","y","map","AddPhoto","handleSubmit","bind","event","preventDefault","imgLink","target","elements","link","value","Number","Date","this","startAddingPost","onSubmit","placeholder","name","Component","Comments","startAddingComment","console","log","hidden","Single","match","params","find","findIndex","loading","Main","startLoadingPost","then","setState","startLoadingComments","exact","path","render","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","addPost","catch","err","once","snapshot","forEach","childSnapshot","val","loadPosts","addComment","key","Object","values","loadComments","removePost","updates","error","App","withRouter","connect","bindActionCreators","actions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.98a07785.chunk.js","sourcesContent":["const posts = []\r\n\r\nexport default posts","import postsList from '../data/posts'\r\nimport { combineReducers } from 'redux'\r\n\r\nfunction comments(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'ADD_COMMENT':\r\n\r\n      if (!state[action.postId]) {\r\n        return { ...state, [action.postId]: [action.comment] }\r\n      } else {\r\n        return { ...state, [action.postId]: [...state[action.postId], action.comment] }\r\n      }\r\n    case 'LOAD_COMMENTS': return action.comments\r\n    default: return state\r\n  }\r\n  return state\r\n}\r\n\r\nfunction posts(state = postsList, action) {\r\n  switch (action.type) {\r\n    case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\r\n    case 'ADD_POST': return [...state, action.post]\r\n    case 'LOAD_POSTS': return action.posts\r\n    default: return state\r\n  }\r\n  return state\r\n}\r\n\r\nconst rootReducer = combineReducers({ posts, comments })\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Photo(props) {\r\n  const post = props.post;\r\n  return <figure className=\"figure\">\r\n    <Link to={`/single/${post.id}`} >\r\n      <img className=\"photo\" src={post.imageLink} alt={post.description} />\r\n    </Link>\r\n    <figcaption><p> {post.description} </p></figcaption>\r\n    <div className=\"button-container\">\r\n      <button onClick={() => {\r\n        props.startRemovingPost(props.index, post.id)\r\n        props.history.push('/')\r\n      }}>Remove</button>\r\n      <Link className=\"button\" to={`/single/${post.id}`} >\r\n        <div className=\"comment-count\">\r\n          <div className=\"speech-bubble\"></div>\r\n          {props.comments[post.id] ? props.comments[post.id].length : 0}\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  </figure>\r\n}\r\n\r\nPhoto.propTypes = {\r\n  post: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nexport default Photo","import React from 'react'\r\nimport Photo from './Photo'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PhotoWall(props) {\r\n  return <div>\r\n    <Link className=\"addIcon\" to=\"/AddPhoto\" ></Link>\r\n    <div className=\"photoGrid\">\r\n      {props.posts\r\n        .sort(function (x, y) {\r\n          return y.id - x.id\r\n        })\r\n        .map((post, index) => <Photo key={index} post={post} {...props} index={index} />)}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nPhotoWall.propTypes = {\r\n  posts: PropTypes.array.isRequired\r\n}\r\n\r\nexport default PhotoWall","import React, { Component } from 'react'\r\n\r\nclass AddPhoto extends Component {\r\n  constructor() {\r\n    super()\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const imgLink = event.target.elements.link.value;\r\n    const description = event.target.elements.description.value;\r\n    const post = {\r\n      id: Number(new Date()),\r\n      description: description,\r\n      imageLink: imgLink\r\n    }\r\n    if (description && imgLink) {\r\n      this.props.startAddingPost(post)\r\n      this.props.history.push('/')\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return <div>\r\n      <div className=\"form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" placeholder=\"Link\" name=\"link\" />\r\n          <input type=\"text\" placeholder=\"Description\" name=\"description\" />\r\n          <button>Post</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default AddPhoto","import React, { Component } from 'react'\r\n\r\nclass Comments extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    const comment = event.target.elements.comment.value\r\n    this.props.startAddingComment(comment, this.props.id)\r\n    event.target.elements.comment.value = ''\r\n\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.comments);\r\n    return <div className=\"comment\">\r\n      {\r\n        this.props.comments.map((comment, index) => {\r\n          return (\r\n            <p key={index}>{comment}</p>\r\n          )\r\n        })\r\n      }\r\n      <form className=\"comment-form\" onSubmit={this.handleSubmit}>\r\n        <input type=\"text\" placeholder=\"comment\" name=\"comment\" />\r\n        <input type=\"submit\" hidden />\r\n      </form>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Comments","import React, { Component } from 'react'\r\nimport Photo from './Photo'\r\nimport Comments from './Comments'\r\n\r\n\r\nclass Single extends Component {\r\n  render() {\r\n    const { match, posts } = this.props;\r\n    const id = Number(match.params.id);\r\n    const post = posts.find((post) => post.id === id);\r\n    const comments = this.props.comments[id] || []\r\n    const index = this.props.posts.findIndex((post) => post.id === id)\r\n    if (this.props.loading === true) {\r\n      return <div className=\"loader\">...loading</div>\r\n    } else if (post) {\r\n      return <div className='single-photo'>\r\n        <Photo post={post} {...this.props} index={index} />\r\n        <Comments startAddingComment={this.props.startAddingComment} comments={comments} id={id} />\r\n      </div>\r\n    } else {\r\n      return <div className=\"loader\"> ...no post found </div>\r\n    }\r\n  }\r\n}\r\n\r\nexport default Single","import React, { Component } from 'react'\r\nimport PhotoWall from './PhotoWall'\r\nimport AddPhoto from './AddPhoto'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport Single from './Single'\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  state = { loading: true }\r\n\r\n  componentDidMount() {\r\n    this.props.startLoadingPost().then(() => {\r\n      this.setState({ loading: false })\r\n    })\r\n    this.props.startLoadingComments()\r\n  }\r\n\r\n  render() {\r\n    return <div>\r\n      <h1>\r\n        <Link to=\"/\">Photowall</Link>\r\n      </h1>\r\n      <Route exact path=\"/\" render={() => (\r\n        <div>\r\n          <PhotoWall {...this.props} />\r\n        </div>\r\n      )} />\r\n      <Route path=\"/AddPhoto\" render={({ history }) => (\r\n        <AddPhoto {...this.props} />\r\n      )} />\r\n\r\n      <Route path=\"/single/:id\" render={(params) => (\r\n        <Single loading={this.state.loading} {...this.props} {...params} />   //params must be AFTER props in order to use match object of params\r\n      )} />\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Main //presentational component","import * as firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDniPetoCcfDBNjc6ZdiF_f5525vB2b3io\",\r\n  authDomain: \"photowall-7ba57.firebaseapp.com\",\r\n  databaseURL: \"https://photowall-7ba57-default-rtdb.firebaseio.com\",\r\n  projectId: \"photowall-7ba57\",\r\n  storageBucket: \"photowall-7ba57.appspot.com\",\r\n  messagingSenderId: \"812951014374\",\r\n  appId: \"1:812951014374:web:f393f9b55af3ebe047a427\",\r\n  measurementId: \"G-WJLQ3J95KJ\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.database()\r\n\r\nexport { database }","import { database } from '../database/config'\r\n\r\nexport function startAddingPost(post) {\r\n  return (dispatch) => {\r\n    return database.ref('posts').update({ [post.id]: post }).then(() => {\r\n      dispatch(addPost(post))\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport function startLoadingPost() {\r\n  return (dispatch) => {\r\n    return database.ref('posts').once('value').then((snapshot) => {\r\n      let posts = []\r\n      snapshot.forEach((childSnapshot) => {\r\n        posts.push(childSnapshot.val())\r\n      })\r\n      dispatch(loadPosts(posts))\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport function startAddingComment(comment, postId) {\r\n  return (dispatch) => {\r\n    return database.ref(`comments/${postId}`).push(comment).then(() => {\r\n      dispatch(addComment(comment, postId))\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport function startLoadingComments() {\r\n  return (dispatch) => {\r\n    return database.ref(`comments`).once('value').then((snapshot) => {  //asynchronous database call\r\n      let comments = {}\r\n      snapshot.forEach((childSnapshot) => {\r\n        comments[childSnapshot.key] = Object.values(childSnapshot.val())\r\n      })\r\n      dispatch(loadComments(comments))\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport function removePost(index) {\r\n  return {\r\n    type: 'REMOVE_POST',\r\n    index  //in ES6 this is the same as 'index: index'\r\n  }\r\n}\r\n\r\nexport function addPost(post) {\r\n  return {\r\n    type: 'ADD_POST',\r\n    post  //in ES6 this is the same as 'post:post'\r\n  }\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: 'ADD_COMMENT',\r\n    comment,\r\n    postId\r\n  }\r\n}\r\n\r\nexport function loadPosts(posts) {\r\n  return {\r\n    type: 'LOAD_POSTS',\r\n    posts\r\n  }\r\n}\r\n\r\nexport function loadComments(comments) {\r\n  return {\r\n    type: 'LOAD_COMMENTS',\r\n    comments\r\n  }\r\n}\r\n\r\n\r\nexport function startRemovingPost(index, id) {\r\n\r\n  const updates = {\r\n    [`posts/${id}`]: null,\r\n    [`comments/${id}`]: null\r\n  }\r\n  /* this specifies the paths that we want to update to null \r\n  (basically delete)\r\n  we're navigating to the post with id we clicked remove on, \r\n  as well as the comments belonging to that post, with \r\n  that same id. */\r\n\r\n  return (dispatch) => {\r\n    return database.ref().update(updates).then(() => {\r\n      dispatch(removePost(index))\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n\r\n/*finally, we're updating the database from its root node, such\r\nthat it navigates to the posts path, as well as the comments\r\n path, and  sets them to null ! (in other words, deletes both\r\nof them).\r\nAfter deleting the post and its comments from the database,\r\nlike always, we're updating\r\nthe ui by dispatching an action to our reducer\r\ninside of .then() */","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport Main from './Main'\r\nimport * as actions from '../redux/actions'\r\nimport { withRouter } from 'react-router'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n    comments: state.comments\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(actions, dispatch)\r\n}\r\n\r\nconst App = withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))\r\n\r\nexport default App //provides data","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './styles/stylesheet.css'\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './redux/reducer'\nimport { Provider } from 'react-redux'\nimport App from './Components/App'\nimport thunk from 'redux-thunk'\nimport { database } from './database/config'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk));\n\n\nReactDOM.render(<Provider store={store}><HashRouter><App /></HashRouter></Provider>, document.getElementById('root'))\n"],"sourceRoot":""}